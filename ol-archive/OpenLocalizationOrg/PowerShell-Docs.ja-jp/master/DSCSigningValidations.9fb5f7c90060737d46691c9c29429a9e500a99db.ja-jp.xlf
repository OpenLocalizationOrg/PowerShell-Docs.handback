<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">817fadb79716e41ce8cc8f4245dedc66347ac413</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.1\features-scenarios-cache\DSCSigningValidations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">420e1aa08206eaa4e0dfe9b7c8aa21a26566f5f4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">84b75480b090abf5081c7273c4a6ccbe6e5bb9c5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>DSC Module and Configuration Signing validations</source>
          <target state="translated">DSC のモジュールと構成の署名検証</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>DSC Module and Configuration Signing validations</source>
          <target state="translated">DSC のモジュールと構成の署名検証</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In DSC, configuration documents and modules are distributed to managed machines from the pull server or pull server (in the case of Azure Automation pull service).</source>
          <target state="translated">DSC の構成に関するドキュメントとモジュールが、プル サーバーまたは (Azure Automation サービスを使用) の場合はプル サーバーから管理対象のコンピュータに配布されます。</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the pull server/service is compromised, an attacker can potentially modify the configurations and modules on the pull server and have it distributed to all managed machines, thus compromising even more machines of the customer.</source>
          <target state="translated">プル サーバー/サービスが侵害された場合、攻撃者できる可能性のあるプル サーバー上のモジュールと構成を変更をしてすべての管理対象コンピューターに配布ため、顧客のさらに多くのマシンを損なうこと。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This threat is addressed in WMF 5.1.</source>
          <target state="translated">このような脅威が WMF 5.1 でアドレス指定します。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>DSC supports validating the digital signatures on modules and configuration (.MOF) files.</source>
          <target state="translated">DSC は、モジュールと構成にデジタル署名の検証をサポートしています (します。MOF) ファイル。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This feature will prevent nodes from executing a configuration or module files that are not signed by trusted signer or that have been tampered with after they have been signed by trusted signer.</source>
          <target state="translated">この機能は、ノードを構成または信頼された署名者を署名がないかが改ざんされている信頼された署名者によって署名された後、モジュール ファイルを実行できなくなります。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>How to sign configuration and module</source>
          <target state="translated">構成とモジュールに署名する方法</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Configuration Files (.MOFS):- The existing PowerShell cmdlet <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> is extended to support signing of MOF files.</source>
          <target state="translated">構成ファイル (.MOFS):- 既存の PowerShell コマンドレット <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> が拡張され、MOF ファイルの署名に対応しています。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Modules:- Signing of modules is done by signing the corresponding module catalog using the following steps:-</source>
          <target state="translated">モジュール:- モジュールの署名は、次の手順を利用し、対応するモジュール カタログに署名することで完了します:-</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create a catalog file: A catalog file contains a collection of cryptographic hashes, or thumbprints.</source>
          <target state="translated">カタログ ファイルの作成: カタログ ファイルには、暗号法のハッシュまたは拇印の集まりが含まれています。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each thumbprint corresponds to a file that is included in the module.</source>
          <target state="translated">拇印はそれぞれ、モジュールに含まれるファイルに対応します。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A new cmdlet <bpt id="p1">[</bpt>New-FileCatalog<ept id="p1">](https://technet.microsoft.com/library/cc732148.aspx)</ept>, has been added to enable users create a catalog file for their module.</source>
          <target state="translated">新しいコマンドレット <bpt id="p1">[</bpt>New-FileCatalog<ept id="p1">](https://technet.microsoft.com/library/cc732148.aspx)</ept> が追加され、ユーザーは自分のモジュールのカタログ ファイルを作成できます。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Please refer to the catalog cmdlets <bpt id="p1">[</bpt>a relative link<ept id="p1">](catalog-cmdlets.md)</ept> to create catalog files.</source>
          <target state="translated">カタログのコマンドレットを参照してください <bpt id="p1">[</bpt>相対リンク<ept id="p1">](catalog-cmdlets.md)</ept> カタログ ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Sign the catalog file: using <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> sign the catalog file.</source>
          <target state="translated">カタログ ファイルの署名: <bpt id="p1">[</bpt>Set-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849819.aspx)</ept> を利用し、カタログ ファイルに署名します。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Place the catalog file inside the module folder.</source>
          <target state="translated">モジュール フォルダー内にカタログ ファイルを配置します。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By convention, Module catalog file should be placed under the module folder with the same name as the module.</source>
          <target state="translated">慣例では、モジュール カタログ ファイルは、モジュールと同じ名前のモジュール フォルダーの下に配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>LocalConfigurationManager Settings to enable signing validations.</source>
          <target state="translated">LocalConfigurationManager 設定で署名検証を有効にする</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>PULL</source>
          <target state="translated">プル</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The LocalConfigurationManager of a node performs signing validation of modules and configurations based on its current settings.</source>
          <target state="translated">ノードの LocalConfigurationManager は、その現在の設定に基づき、モジュールと構成の署名を検証します。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>By default, signature validation is disabled.</source>
          <target state="translated">既定では、署名検証は無効です。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Signature validation can enabled by adding ‘SignatureValidation’ block to the meta-configuration definition of the node as shown below:-</source>
          <target state="translated">署名検証は、‘SignatureValidation’ ブロックを下の図のようにノードのメタ構成定義に追加することで有効にできます:-</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Setting the above metaconfiguration on a node enables signature validation on downloaded configurations and modules.</source>
          <target state="translated">ノードに上記のメタ構成を設定すると、ダウンロードした構成とモジュールで署名を検証できます。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The localconfigurationmanager will perform the following steps to verify the digital signatures.</source>
          <target state="translated">ローカル構成マネージャーは次の手順でデジタル署名を検証します。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Verify the signature on a configuration file (.MOF) is valid.</source>
          <target state="translated">構成ファイル (.MOF) の署名が有効であることを検証します。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It uses the powershell cmdlet <bpt id="p1">[</bpt>Get-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849805.aspx)</ept>, which is extended in 5.1 to support MOF sigature validation.</source>
          <target state="translated">これは PowerShell コマンドレット <bpt id="p1">[</bpt>Get-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849805.aspx)</ept> を使用します。このコマンドレットは 5.1 で拡張され、MOF 署名検証に対応しています。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Verify the certificate authority that authorized the signer is trusted.</source>
          <target state="translated">署名者が信頼できることを認定した証明機関を検証します。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Download module/resource dependencies of the configuration to a temp location.</source>
          <target state="translated">構成のモジュール/リソース依存性を一時的な場所にダウンロードします。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Verify the signature of the catalog included inside the module.</source>
          <target state="translated">モジュール内に含まれるカタログの署名を検証します。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Find a <ph id="ph1">&lt;moduleName&gt;</ph>.cat file and verify its signature using the cmdlet  <bpt id="p1">[</bpt>Get-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849805.aspx)</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;moduleName&gt;</ph>.cat ファイルを見つけ、コマンドレット <bpt id="p1">[</bpt>Get-AuthenticodeSignature<ept id="p1">](https://technet.microsoft.com/library/hh849805.aspx)</ept> でその署名を検証します。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Verify the certification authority that authenticated the signer is trusted.</source>
          <target state="translated">署名者が信頼できることを認定した証明機関を検証します。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Verify the content of the modules has not been tampered using the new cmdlet <bpt id="p1">[</bpt>Test-FileCatalog<ept id="p1">](https://technet.microsoft.com/library/cc732148.aspx)</ept>.</source>
          <target state="translated">新しいコマンドレット <bpt id="p1">[</bpt>Test-FileCatalog<ept id="p1">](https://technet.microsoft.com/library/cc732148.aspx)</ept> を利用し、モジュールのコンテンツが改ざんされていないことを検証します。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Install-module to $env:ProgramFiles\WindowsPowerShell\Modules\</source>
          <target state="translated">$env:ProgramFiles\WindowsPowerShell\Modules\ に Install-module を実行します</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Process configuration.</source>
          <target state="translated">プロセス構成</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Note: - Signature validation on module-catalog and configuration is only performed when the configuration is applied to the system for the first time or when the module is downloaded and installed.</source>
          <target state="translated">注: - モジュール カタログと構成の署名検証は、構成がシステムに最初に適用されるときか、モジュールがダウンロードされ、インストールされるときにのみ実行されます。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Consistency run does not validate signature of Current.mof or its module dependencies.</source>
          <target state="translated">整合性実行では、Current.mof やそのモジュール依存性の署名は検証されません。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If verification has failed at any stage, for instance if the configuration pulled from the pullserver is unsigned, then processing of the configuration will be terminated with the error shown below and all temporary files will be deleted.</source>
          <target state="translated">インスタンスの構成、pullserver から取り出されている場合が署名されていない、構成の処理がすべて一時的な下に表示されるエラーで終了しのいずれかの段階で検証に失敗した場合は、ファイルが削除されます。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Sample Error Output Configuration</source>
          <target state="translated">構成のエラー出力のサンプル</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Similarily, Pulling a module whose catalog is not signed will result in the following error:-</source>
          <target state="translated">同様に、カタログに署名のないモジュールがプルされると次のエラーが発生します:-</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Sample Error Output Module</source>
          <target state="translated">モジュールのエラー出力のサンプル</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>PUSH</source>
          <target state="translated">プッシュ</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A configuration delivered via push might be tampered at its source before it is delivered to the node.</source>
          <target state="translated">ノードに配信される前に、プッシュを使用して提供される構成をそのソースで改ざんされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The Local configuration manager will perform similar signature validation steps for pushed or published configuration(s).</source>
          <target state="translated">ローカル構成マネージャーは、プッシュまたは公開された構成に対して同様の署名検証手順を実行します。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Below is a complete example of signature validation for push.</source>
          <target state="translated">以下は、プッシュの署名検証の完全例です。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Enable signature validation on the node.</source>
          <target state="translated">ノードで署名検証を有効にします。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Create a sample configuration file.</source>
          <target state="translated">サンプル構成ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Try pushing the unsigned configuration file in to the node.</source>
          <target state="translated">署名のない構成ファイルをノードにプッシュしてみます。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>ErrorUnsignedMofPushed</source>
          <target state="translated">ErrorUnsignedMofPushed</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Sign the configurtion file using code-signing cert.</source>
          <target state="translated">コード署名証明書を利用し、構成ファイルに署名します。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>SignMofFile</source>
          <target state="translated">SignMofFile</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Try pushing the signed mof file.</source>
          <target state="translated">署名された mof ファイルをプッシュしてみます。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>SignMofFile</source>
          <target state="translated">SignMofFile</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>