<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8a3ae5fdf5d70de999ca6b992efb14533408c305</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dsc\configData.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec3ee6b6f223ac48e1c9aca1dc8d8b6d8c04cc15</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ddc3f0fefc2a2081d67ed4070e3ca36960fd3006</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="translated">構成データと環境データの分離</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,DSC</source>
          <target state="translated">PowerShell, DSC</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Separating Configuration and Environment Data</source>
          <target state="translated">構成データと環境データの分離</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Applies To: Windows PowerShell 4.0, Windows PowerShell 5.0</source>
          <target state="translated">適用先: Windows PowerShell 4.0、Windows PowerShell 5.0</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell Desired State Configuration (DSC), it is possible to separate configuration data from the logic of your configuration.</source>
          <target state="translated">Windows PowerShell Desired State Configuration (DSC) では、構成のロジックから構成データを分離することができます。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Another way to look at this is to consider the structural configuration (for example, a configuration might require that IIS be installed) as separate from the environmental configuration (that is, whether the situation is a test environment vs. a production one—the node names would be different, but the configuration applied to them would be the same).</source>
          <target state="translated">見方を変えると、このことは、構造の構成 (たとえば、IIS がインストールされていることが必要な構成) と環境の構成を切り離して考えることに相当します。つまり、テスト環境の場合と、運用環境の場合とで、ノード名が異なっても、適用される構成は同じになります。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This has the following advantages:</source>
          <target state="translated">このことには次の利点があります。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It allows you to reuse your configuration data for different resources, nodes, and configurations.</source>
          <target state="translated">さまざまなリソース、ノード、および構成の構成データを再利用できます。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Configuration logic is more reusable if it does not contain hard-coded data.</source>
          <target state="translated">構成ロジックは、ハード コードされたデータが含まれていないと、再利用可能性が高くなります。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is similar to good scripting guidelines for functions.</source>
          <target state="translated">これは、関数の適切なスクリプト作成のガイドラインに似ています。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If some of the data needs to change, you can make the changes in one location, thereby saving time and reducing errors.</source>
          <target state="translated">一部のデータを変更する必要がある場合は、1 つの場所で変更を加えることができるため、時間を節約し、エラーを削減できます。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Basic concepts and examples</source>
          <target state="translated">基本的な概念と例</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To specify the environmental part of the configuration, DSC uses the <bpt id="p1">**</bpt>ConfigurationData<ept id="p1">**</ept> parameter, which is a hash table (or it can take a .psd1 file which contains the hash table).</source>
          <target state="translated">構成の環境部分を指定するには、DSC で <bpt id="p1">**</bpt>ConfigurationData<ept id="p1">**</ept> パラメーターを使用します。これは、ハッシュ テーブルです (またはハッシュ テーブルを含む .psd1 ファイルを指定できます)。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This hash table must have at least one key <bpt id="p1">**</bpt>AllNodes<ept id="p1">**</ept>, which has a structured value.</source>
          <target state="translated">このハッシュ テーブルには、少なくとも、構造化された値を持つ 1 つのキー <bpt id="p1">**</bpt>AllNodes<ept id="p1">**</ept> が必要です。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note the AllNodes key, whose value is an array.</source>
          <target state="translated">値が配列である AllNodes キーに注意してください。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each element of this array is also a hash table, which requires NodeName as a key:</source>
          <target state="translated">この配列の各要素も、キーとして NodeName を必要とするハッシュ テーブルです。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Each hash table entry in AllNodes corresponds to configuration data to a node in the configuration.</source>
          <target state="translated">AllNodes の各ハッシュ テーブル エントリは、構成内のノードの構成データに対応します。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In addition to the required NodeName key, you can add other keys to the hash table as well, for example:</source>
          <target state="translated">必要な NodeName キーに加えて、他のキーをハッシュ テーブルに追加することもできます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>DSC offers three special variables to use in the configuration script:</source>
          <target state="translated">DSC には、構成スクリプトで使用する 3 つの特殊な変数が用意されています。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$AllNodes<ept id="p1">**</ept>: Refers to all of the nodes.</source>
          <target state="translated"><bpt id="p1">**</bpt>$AllNodes<ept id="p1">**</ept>: すべてのノードを参照します。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can use filtering with <bpt id="p1">**</bpt>.Where()<ept id="p1">**</ept> and <bpt id="p2">**</bpt>.ForEach()<ept id="p2">**</ept>, so instead of hard-coding node names to select particular nodes for action, you could write something like this to select VM-1 and VM-3 in the above example:</source>
          <target state="translated"><bpt id="p1">**</bpt>.Where()<ept id="p1">**</ept> および <bpt id="p2">**</bpt>.ForEach()<ept id="p2">**</ept> によるフィルター処理を使用できます。このため、ノード名ハード コードしてアクション用の特定のノードを選択する代わりに、次のように記述して上記の例の VM 1 および VM 3 を選択できます。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$Node<ept id="p1">**</ept>: Once the set of nodes is filtered, you can use $Node to refer to the particular entry.</source>
          <target state="translated"><bpt id="p1">**</bpt>$Node<ept id="p1">**</ept>: ノードのセットがフィルター処理された後、$Node を使用して特定のエントリを参照できます。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To apply a property to all nodes, you can set NodeName = “*”.</source>
          <target state="translated">すべてのノードにプロパティを適用するには、NodeName = "*" を設定します。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, to give every node the LogPath property, you could do this:</source>
          <target state="translated">たとえば、すべてのノードに LogPath プロパティを適用するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$ConfigurationData<ept id="p1">**</ept>: You can use this variable inside a configuration to access the configuration data hash table passed as a parameter.</source>
          <target state="translated"><bpt id="p1">**</bpt>$ConfigurationData<ept id="p1">**</ept>: 構成内でこの変数を使用して、パラメーターとして渡された構成データのハッシュ テーブルにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can find a full example included in the <bpt id="p1">[</bpt>xWebAdministration module<ept id="p1">](https://powershellgallery.com/packages/xWebAdministration)</ept>.</source>
          <target state="translated">含まれる完全な例は、<bpt id="p1">[</bpt>xWebAdministration module (xWebAdministration モジュール)<ept id="p1">](https://powershellgallery.com/packages/xWebAdministration)</ept> にあります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>