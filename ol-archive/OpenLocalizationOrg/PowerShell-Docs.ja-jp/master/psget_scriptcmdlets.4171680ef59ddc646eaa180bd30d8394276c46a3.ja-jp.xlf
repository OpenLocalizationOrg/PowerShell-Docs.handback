<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91a4ed1e8912f77e274d64db7873ad56edbbd17b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">wmf\5.0\psget_scriptcmdlets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8191ffeee095a7d0d90c02ab30ed1cab5e0f521</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5796e505d47a6bc8040e7e9cbcaae938ec75d312</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>PowerShellGet Cmdlets for Script Management</source>
          <target state="translated">スクリプト管理用の PowerShellGet コマンドレット</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Find-Script cmdlet</source>
          <target state="translated">Find-Script コマンドレット</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Find-Script cmdlet lets you to discover the script files with different search criteria like name, tag, filter, command name, version range, exact version, all versions, including its dependencies and from specific or all registered repositories.</source>
          <target state="translated">Find-Script コマンドレットでは、名前、タグ、フィルター、コマンド名、バージョン範囲、正確なバージョン、すべてのバージョンなどのさまざまな検索条件を使用して、特定またはすべての登録済みリポジトリから、スクリプト ファイルをその依存関係を含めて検出できます。</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用例:</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Save-Script cmdlet</source>
          <target state="translated">Save-Script コマンドレット</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Save-Script cmdlet lets you to review the script file by saving it to a specified location.</source>
          <target state="translated">Save-Script コマンドレットでは、指定した場所に保存することによって、スクリプト ファイルを確認できます。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Install-Script and Get-InstalledScript cmdlets</source>
          <target state="translated">Install-Script および Get-InstalledScript コマンドレット</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Install-Script cmdlet lets you to install a specific script file along with its dependencies to the specified scope.</source>
          <target state="translated">Install-Script コマンドレットでは、特定のスクリプト ファイルをその依存関係と共に、指定したスコープにインストールできます。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, scripts are installed to the AllUsers scope.</source>
          <target state="translated">既定では、スクリプトは AllUsers スコープにインストールされます。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Get-InstalledScript cmdlet lets you to get the list of script files which were installed using Install-Script cmdlet.</source>
          <target state="translated">Get-InstalledScript コマンドレットでは、Install-Script コマンドレットを使用してインストールされたスクリプト ファイルの一覧を取得できます。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use note: To allow management and locating of scripts once they are installed, Install-script will create a default folder for storing scripts at $home\Documents\WindowsPowerShell\Scripts, and add that folder to your PATH environment.</source>
          <target state="translated">使用上の注意: スクリプトがインストールされた後、管理および検索できるようにするため、Install-Script によってスクリプトを格納するための既定のフォルダーが $home\Documents\WindowsPowerShell\Scripts に作成され、PATH 環境変数にそのフォルダーが追加されます。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If modifying the path is a concern, use Save-Script instead of Install-Script.</source>
          <target state="translated">パスの変更に問題がある場合は、Install-Script ではなく Save-Script を使用します。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Get-InstalledScripts and Uninstall-Script can only work with scripts placed on the system using Install-Script.</source>
          <target state="translated">Get-InstalledScripts と Uninstall-Script は、Install-Script を使用してシステム上に配置されたスクリプトに対してのみ機能します。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also use Get-Command –Name <ph id="ph1">&amp;lt;</ph>InstalledScriptFileName<ph id="ph2">&amp;gt;</ph> to get it.</source>
          <target state="translated">Get-Command -Name <ph id="ph1">&amp;lt;</ph>InstalledScriptFileName<ph id="ph2">&amp;gt;</ph> を使用してこれを取得することもできます。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Two install locations are added to the PATH environment variable on first use of a specified scope.</source>
          <target state="translated">2 つのインストール場所は、指定したスコープの初回使用時に PATH 環境変数に追加されます。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Update-Script cmdlet</source>
          <target state="translated">Update-Script コマンドレット</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Update-Script cmdlet lets you to do in-place update of the script files which were installed using Install-Script cmdlet.</source>
          <target state="translated">Update-Script コマンドレットでは、Install-Script コマンドレットを使用してインストールされたスクリプト ファイルのインプレース更新ができます。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Uninstall-Script cmdlet</source>
          <target state="translated">Uninstall-Script コマンドレット</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>New-ScriptFileInfo and Test-ScriptFileInfo cmdlets</source>
          <target state="translated">New-ScriptFileInfo および Test-ScriptFileInfo コマンドレット</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>New-ScriptFileInfo cmdlet lets you to create a new script file with metadata like Version, Guid, Author, and Description, etc. Test-ScriptFileInfo cmdlet lets you to validate and get the script file metadata.</source>
          <target state="translated">New-ScriptFileInfo コマンドレットでは、バージョン、GUID、作成者、説明などのメタデータを含む新しいスクリプト ファイルを作成できます。Test-ScriptFileInfo コマンドレットでは、スクリプト ファイルのメタデータを検証および取得できます。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Update-ScriptFileInfo cmdlet</source>
          <target state="translated">Update-ScriptFileInfo コマンドレット</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Update-ScriptFileInfo cmdlet lets you to update the existing script file metadata.</source>
          <target state="translated">Update-ScriptFileInfo コマンドレットでは、既存のスクリプト ファイルのメタデータを更新できます。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Register-PSRepository and Set-PSRepository cmdlets with script sharing support</source>
          <target state="translated">スクリプト共有サポートがある Register-PSRepository および Set-PSRepository コマンドレット</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Use Register-PSRepository/Set-PSRepository cmdlets to add the <bpt id="p1">**</bpt>ScriptSourceLocation<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ScriptPublishLocation<ept id="p2">**</ept> to the PSRepository.</source>
          <target state="translated"><bpt id="p1">**</bpt>ScriptSourceLocation<ept id="p1">**</ept> および <bpt id="p2">**</bpt>ScriptPublishLocation<ept id="p2">**</ept> を PSRepository に追加するには、Register-PSRepository/Set-PSRepository コマンドレットを使用します。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Publish-Script cmdlet</source>
          <target state="translated">Publish-Script コマンドレット</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Publish-Script cmdlet lets you to publish your script file with valid metadata like Version, Guid, Author, and Description, etc.</source>
          <target state="translated">Publish-Script コマンドレットでは、バージョン、GUID、作成者、説明などの有効なメタデータを含むスクリプト ファイルを発行できます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>