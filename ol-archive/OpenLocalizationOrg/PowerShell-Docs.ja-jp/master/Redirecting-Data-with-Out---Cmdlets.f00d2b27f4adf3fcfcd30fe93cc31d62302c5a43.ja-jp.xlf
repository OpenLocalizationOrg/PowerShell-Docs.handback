<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e62ae14e4d7334d0cd42681c7e2591692c089187</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Redirecting-Data-with-Out---Cmdlets.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">757e94126d8a9c314bbf0f6d0ad34163f9141674</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">347619c4b3da837cf736644d5a6087f5f2eea2f8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Redirecting Data with Out   Cmdlets</source>
          <target state="translated">Out-* コマンドレットを使用したデータのリダイレクト</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">PowerShell, コマンドレット</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Redirecting Data with Out-* Cmdlets</source>
          <target state="translated">Out-* コマンドレットを使用してデータをリダイレクトする</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Windows PowerShell provides several cmdlets that let you control data output directly.</source>
          <target state="translated">Windows PowerShell には、データ出力を直接制御できるようにするコマンドレットがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>These cmdlets share two important characteristics.</source>
          <target state="translated">これらのコマンドレットには、2 つの重要な特性があります。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>First, they generally transform data to some form of text.</source>
          <target state="translated">まず、これらのコマンドレットは、通常、データをいくつかの形式のテキストに変換します。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>They do this because they output the data to system components that require text input.</source>
          <target state="translated">コマンドレットは、テキスト入力を必要とするシステム コンポーネントにデータを出力するので、変換を実行します。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This means they need to represent the objects as text.</source>
          <target state="translated">これは、コマンドレットがオブジェクトを文字列として表現する必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Therefore, the text is formatted as you see it in the Windows PowerShell console window.</source>
          <target state="translated">したがって、テキストは Windows PowerShell のコンソール ウィンドウに表示される形式に書式設定されます。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Second, these cmdlets use the Windows PowerShell verb <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> because they send information out from Windows PowerShell to somewhere else.</source>
          <target state="translated">2 番目に、これらのコマンドレットは、Windows PowerShell から他の場所に情報を送信するために、Windows PowerShell の動詞 <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> を使用します。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> cmdlet is no exception: the host window display is outside of Windows PowerShell.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> コマンドレットも例外ではありません。ホスト ウィンドウ表示は、Windows PowerShell の外部で行われます。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This is important because when data is sent out of Windows PowerShell, it is actually removed.</source>
          <target state="translated">これは、Windows PowerShell の外部にデータが送信されるときに、データが実際に削除されるので、重要です。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can see this if you try to create a pipeline that pages data to the host window, and then attempt to format it as a list, as shown here:</source>
          <target state="translated">ホスト ウィンドウにデータをページングするパイプラインを作成しようとする場合に、これが発生します。次に示すように、リストとして書式設定を試みます。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You might expect the command to display pages of process information in list format.</source>
          <target state="translated">リスト形式で処理情報のページを表示するコマンドと思ったかもしれません。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Instead, it displays the default tabular list:</source>
          <target state="translated">そうではなく、既定の表形式のリストが表示されます。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> cmdlet sends the data directly to the console, so the <bpt id="p2">**</bpt>Format-List<ept id="p2">**</ept> command never receives anything to format.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> コマンドレットは、データを直接にコンソールに送信します。したがって、<bpt id="p2">**</bpt>Format-List<ept id="p2">**</ept> コマンドは、書式を設定するものを何も受信しません。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The correct way to structure this command is to put the <bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> cmdlet at the end of the pipeline as shown below.</source>
          <target state="translated">このコマンドを構築する正しい方法は、次に示すように、<bpt id="p1">**</bpt>Out-Host<ept id="p1">**</ept> コマンドレットをパイプラインの最後に置くことです。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This causes the process data to be formatted in a list before being paged and displayed.</source>
          <target state="translated">これによって、データがページングされて表示される前に、リスト形式に書式設定するよう処理されます。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This applies to all of the <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlets.</source>
          <target state="translated">これは、すべての <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> コマンドレットに適用されます。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlet should always appear at the end of the pipeline.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out<ept id="p1">**</ept> コマンドレットは、常にパイプラインの末尾に置く必要があります。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>All the <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> cmdlets render output as text, using the formatting in effect for the console window, including line length limits.</source>
          <target state="translated">すべての <bpt id="p1">**</bpt>Out<ept id="p1">**</ept> コマンドレットは、コンソール ウィンドウに有効な書式設定 (行の長さの制限を含む) を使用して、テキストとして出力を表示します。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Paging Console Output (Out-Host)</source>
          <target state="translated">コンソール出力のページング (Out-Host)</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>By default, Windows PowerShell sends data to the host window, which is exactly what the Out-Host cmdlet does.</source>
          <target state="translated">既定では、Windows PowerShell は、データをホスト ウィンドウに送信します。実際にそのことを実行するのが Out-Host コマンドレットです。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The primary use for the Out-Host cmdlet is paging data as we discussed earlier.</source>
          <target state="translated">Out-Host コマンドレットの主な用途は、前に説明したようにデータのページングです。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, the following command uses Out-Host to page the output of the Get-Command cmdlet:</source>
          <target state="translated">たとえば、次のコマンドは、Out-Host を使用して、Get-Command コマンドレットの出力をページングします。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can also use the <bpt id="p1">**</bpt>more<ept id="p1">**</ept> function to page data.</source>
          <target state="translated"><bpt id="p1">**</bpt>more<ept id="p1">**</ept> 関数を使用して、データをページングすることも可能です。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In Windows PowerShell, <bpt id="p1">**</bpt>more<ept id="p1">**</ept> is a function that calls <bpt id="p2">**</bpt>Out-Host -Paging<ept id="p2">**</ept>.</source>
          <target state="translated">Windows PowerShell では、<bpt id="p1">**</bpt>more<ept id="p1">**</ept> は、<bpt id="p2">**</bpt>Out-Host -Paging<ept id="p2">**</ept> を呼び出す関数です。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following command demonstrates using the <bpt id="p1">**</bpt>more<ept id="p1">**</ept> function to page the output of Get-Command:</source>
          <target state="translated">次のコマンドの使用例は、<bpt id="p1">**</bpt>more<ept id="p1">**</ept> 関数を使用して、Get-Command の出力をページングします。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you include one or more filenames as arguments to the more function, the function will read the specified files and page their contents to the host:</source>
          <target state="translated">more 関数の引数として、1 つ以上のファイル名を含める場合、関数は指定されたファイルを読み取り、ホストにその内容をページングします。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Discarding Output (Out-Null)</source>
          <target state="translated">出力の破棄 (Out-Null)</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out-Null<ept id="p1">**</ept> cmdlet is designed to immediately discard any input it receives.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-Null<ept id="p1">**</ept> コマンドレットは、受け取ったすべての入力を直ちに破棄するよう設計されています。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This is useful for discarding unnecessary data that you get as a side-effect of running a command.</source>
          <target state="translated">これは、コマンドを実行する副作用として受け取る不要なデータを破棄するのに便利です。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When type the following command, you do not get anything back from the command:</source>
          <target state="translated">次のコマンドを入力すると、コマンドからは何も返ってきません。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out-Null<ept id="p1">**</ept> cmdlet does not discard error output.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-Null<ept id="p1">**</ept> コマンドレットは、エラー出力を破棄しません。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For example, if you enter the following command, a message is displayed informing you that Windows PowerShell does not recognize 'Is-NotACommand':</source>
          <target state="translated">たとえば、次のようにコマンドを入力する場合、Windows PowerShell が 'Is-NotACommand' を認識しないことを通知するメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Printing Data (Out-Printer)</source>
          <target state="translated">データの印刷 (Out-Printer)</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can print data by using the <bpt id="p1">**</bpt>Out-Printer<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-Printer<ept id="p1">**</ept> コマンドレットを使用してデータを印刷できます。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out-Printer<ept id="p1">**</ept> cmdlet will use your default printer if you do not provide a printer name.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-Printer<ept id="p1">**</ept> コマンドレットは、プリンター名を指定しない場合、通常使うプリンターを使用します。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can use any Windows-based printer by specifying its display name.</source>
          <target state="translated">任意の Windows ベースのプリンターを、その表示名を指定して使用できます。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>There is no need for any kind of printer port mapping or even a real physical printer.</source>
          <target state="translated">どんな種類のプリンター ポートのマッピングも (実際の物理プリンターの場合でも) 必要ありません。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, if you have the Microsoft Office document imaging tools installed, you can send the data to an image file by typing:</source>
          <target state="translated">たとえば、Microsoft Office 文書のイメージング ツールがインストールされている場合、次のように入力して、データをイメージ ファイルに送信できます。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Saving Data (Out-File)</source>
          <target state="translated">データの保存 (Out-File)</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can send output to a file instead of the console window by using the <bpt id="p1">**</bpt>Out-File<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-File<ept id="p1">**</ept> コマンドレットを使用して、出力をコンソール ウィンドウにではなく、ファイルに送信することができます。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following command line sends a list of processes to the file <bpt id="p1">**</bpt>C:\\temp\\processlist.txt<ept id="p1">**</ept>:</source>
          <target state="translated">次のコマンド ラインは、プロセスの一覧をファイル <bpt id="p1">**</bpt>C:\temp\processlist.txt<ept id="p1">**</ept> に送信します。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The results of using the <bpt id="p1">**</bpt>Out-File<ept id="p1">**</ept> cmdlet may not be what you expect if you are used to traditional output redirection.</source>
          <target state="translated">従来の出力のリダイレクトを使用している場合、<bpt id="p1">**</bpt>Out-File<ept id="p1">**</ept> コマンドレットを使用した結果は、期待どおりではない可能性があります。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To understand its behavior, you must be aware of the context in which the <bpt id="p1">**</bpt>Out-File<ept id="p1">**</ept> cmdlet operates.</source>
          <target state="translated">その動作を理解するために、<bpt id="p1">**</bpt>Out-File<ept id="p1">**</ept> コマンドレット操作の状況を把握しておく必要があります。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>By default, the <bpt id="p1">**</bpt>Out-File<ept id="p1">**</ept> cmdlet creates a Unicode file.</source>
          <target state="translated">既定では、<bpt id="p1">**</bpt>Out-File<ept id="p1">**</ept> コマンドレットは、Unicode ファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This is the best default in the long run, but it means that tools that expect ASCII files will not work correctly with the default output format.</source>
          <target state="translated">長期的には、これが最適な既定です。しかし、ASCII ファイルを前提とするツールは、既定の出力形式では正しく動作しないことになります。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can change the default output format to ASCII by using the <bpt id="p1">**</bpt>Encoding<ept id="p1">**</ept> parameter:</source>
          <target state="translated"><bpt id="p1">**</bpt>Encoding<ept id="p1">**</ept> パラメーターを使用して、既定の出力フォーマットを ASCII 形式に変更することができます。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Out-file<ept id="p1">**</ept> formats file contents to look like console output.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-file<ept id="p1">**</ept> は、ファイルの内容をコンソール出力に表示されるように書式設定します。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This causes the output to be truncated just as it is in a console window in most circumstances.</source>
          <target state="translated">これによって、ほとんどの状況で、コンソール ウィンドウ内に表示されるのと同じように、出力は切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, if you run the following command:</source>
          <target state="translated">たとえば、次のようにコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The output will look like this:</source>
          <target state="translated">出力は次のようになります。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To get output that does not force line wraps to match the screen width, you can use the <bpt id="p1">**</bpt>Width<ept id="p1">**</ept> parameter to specify line width.</source>
          <target state="translated">行の折り返しを画面の幅に合わせないで出力するには、<bpt id="p1">**</bpt>Width<ept id="p1">**</ept> パラメーターを使用して行の幅を指定します。</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Because <bpt id="p1">**</bpt>Width<ept id="p1">**</ept> is a 32-bit integer parameter, the maximum value it can have is 2147483647.</source>
          <target state="translated"><bpt id="p1">**</bpt>Width<ept id="p1">**</ept> が 32 ビットの整数パラメーターであるため、最大値は 2147483647 です。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Type the following to set the line width to this maximum value:</source>
          <target state="translated">行の幅に、この最大値を設定するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Out-File<ept id="p1">**</ept> cmdlet is most useful when you want to save output as it would have displayed on the console.</source>
          <target state="translated"><bpt id="p1">**</bpt>Out-File<ept id="p1">**</ept> コマンドレットは、ちょうどコンソールに表示されるように出力を保存する場合、最も役立ちます。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For finer control over output format, you need more advanced tools.</source>
          <target state="translated">出力書式設定をさらに細かく制御するには、より高度なツールが必要です。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>We will look at those in the next chapter, along with some details about object manipulation.</source>
          <target state="translated">次の章で、これらについて、またオブジェクト操作についての詳細を説明します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>