<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e1bf444d7657b66422dab3eb8dbeef5e4d581b4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Working-With-Files-Folders-and-Registry-Keys.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba2c7d039b0ccc0ee9cbbbeb3ee84838dcf42834</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18f3c722645ecce7bd991b51369239a55dedcb94</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Working With Files Folders and Registry Keys</source>
          <target state="translated">ファイル、フォルダー、レジストリ キーの操作</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">PowerShell, コマンドレット</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Working With Files, Folders and Registry Keys</source>
          <target state="translated">ファイル、フォルダー、レジストリ キーの操作</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Windows PowerShell uses the noun <bpt id="p1">**</bpt>Item<ept id="p1">**</ept> to refer to items found on a Windows PowerShell drive.</source>
          <target state="translated">Windows PowerShell は、名詞の <bpt id="p1">**</bpt>Item<ept id="p1">**</ept> を使用して Windows PowerShell ドライブで検出された項目を参照します。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When dealing with the Windows PowerShell FileSystem provider, an <bpt id="p1">**</bpt>Item<ept id="p1">**</ept> might be a file, a folder, or the Windows PowerShell drive.</source>
          <target state="translated">Windows PowerShell FileSystem プロバイダーを処理する場合、<bpt id="p1">**</bpt>Item<ept id="p1">**</ept> は、ファイル、フォルダー、または Windows PowerShell ドライブである可能性があります。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Listing and working with these items is a critical basic task in most administrative settings, so we want to discuss these tasks in detail.</source>
          <target state="translated">これらの項目を一覧表示して操作することは、ほとんどの管理設定において重要で基本的なタスクであるため、これらのタスクについては詳細に説明します。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Enumerating Files, Folders, and Registry Keys (Get-ChildItem)</source>
          <target state="translated">ファイル、フォルダー、およびレジストリ キーの列挙 (Get-ChildItem)</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Since getting a collection of items from a particular location is such a common task, the <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> cmdlet is designed specifically to return all items found within a container such as a folder.</source>
          <target state="translated">特定の場所から項目のコレクションを取得することは一般的なタスクであるため、<bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> コマンドレットは、特にフォルダーなどのコンテナー内で見つかったすべての項目を返すよう設計されています。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you want to return all files and folders that are contained directly within the folder C:\\Windows, type:</source>
          <target state="translated">C:\Windows フォルダー内に直接含まれるすべてのファイルとフォルダーを返す場合は、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The listing looks similar to what you would see when you enter the <bpt id="p1">**</bpt>dir<ept id="p1">**</ept> command in <bpt id="p2">**</bpt>Cmd.exe<ept id="p2">**</ept>, or the <bpt id="p3">**</bpt>ls<ept id="p3">**</ept> command in a UNIX command shell.</source>
          <target state="translated">一覧は、<bpt id="p2">**</bpt>Cmd.exe<ept id="p2">**</ept> で <bpt id="p1">**</bpt>dir<ept id="p1">**</ept> コマンドを入力したとき、または UNIX コマンド シェルで <bpt id="p3">**</bpt>ls<ept id="p3">**</ept> コマンドを入力したときに表示される一覧と似ています。</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can perform very complex listings by using parameters of the <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> cmdlet.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> コマンドレットのパラメーターを使用して、複雑な一覧表示を実行できます。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>We will look at a few scenarios next.</source>
          <target state="translated">次に、いくつかのシナリオで見ていきます。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can see the syntax the <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> cmdlet by typing:</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> コマンドレットの構文を確認するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These parameters can be mixed and matched to get highly customized output.</source>
          <target state="translated">これらのパラメーターは混在して利用でき、詳細にカスタマイズされた出力を取得するのに適しています。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Listing all Contained Items (-Recurse)</source>
          <target state="translated">含まれるすべての項目の一覧表示 (-Recurse)</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To see both the items inside a Windows folder and any items that are contained within the subfolders, use the <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-ChildItem<ept id="p2">**</ept>.</source>
          <target state="translated">Windows フォルダー内の項目と、サブフォルダー内に含まれる項目の両方を表示するには、<bpt id="p2">**</bpt>Get-ChildItem<ept id="p2">**</ept> の <bpt id="p1">**</bpt>Recurse<ept id="p1">**</ept> パラメーターを使用します。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The listing displays everything within the Windows folder and the items in its subfolders.</source>
          <target state="translated">一覧には、Windows フォルダー内のすべて、およびそのサブフォルダー内の項目が表示されます。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Filtering Items by Name (-Name)</source>
          <target state="translated">名前で項目をフィルター処理する (-名前)</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To display only the names of items, use the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-Childitem<ept id="p2">**</ept>:</source>
          <target state="translated">項目の名前のみを表示するには、<bpt id="p2">**</bpt>Get-Childitem<ept id="p2">**</ept> の <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> パラメーターを使用します。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Forcibly Listing Hidden Items (-Force)</source>
          <target state="translated">強制的に非表示のアイテムを一覧表示する (-Force)</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Items that are normally invisible in File Explorer or Cmd.exe are not displayed in the output of a <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> command.</source>
          <target state="translated">ファイル エクスプローラーまたは Cmd.exe で通常は非表示の項目は、<bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> コマンドの出力に表示されません。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To display hidden items, use the <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> parameter of <bpt id="p2">**</bpt>Get-ChildItem<ept id="p2">**</ept>.</source>
          <target state="translated">非表示の項目を表示するには、<bpt id="p2">**</bpt>Get-ChildItem<ept id="p2">**</ept> の <bpt id="p1">**</bpt>Force<ept id="p1">**</ept> パラメーターを使用します。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">たとえば、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This parameter is named Force because you can forcibly override the normal behavior of the <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> command.</source>
          <target state="translated">このパラメーターが Force と呼ばれるのは、<bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> コマンドの通常の動作を強制的にオーバーライドできるためです。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Force is a widely used parameter that forces an action that a cmdlet would not normally perform, although it will not perform any action that compromises the security of the system.</source>
          <target state="translated">Force は、コマンドレットが通常は実行しないアクションを強制するために広く使用されるパラメーターですが、システムのセキュリティを侵害するアクションは実行しません。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Matching Item Names with Wildcards</source>
          <target state="translated">ワイルドカードを使用した項目の名前のマッチング</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The Get-ChildItem<ept id="p1">**</ept> command accepts wildcards in the path of the items to list.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> コマンドは、一覧表示する項目のパスでワイルドカードを受け付けます。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Because wildcard matching is handled by the Windows PowerShell engine, all cmdlets that accepts wildcards use the same notation and have the same matching behavior.</source>
          <target state="translated">ワイルドカードのマッチングは Windows PowerShell のエンジンによって処理されるため、ワイルドカードを受け入れるすべてのコマンドレットは、同じ表記法を使用し、マッチングの動作も同じになります。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The Windows PowerShell wildcard notation includes:</source>
          <target state="translated">Windows PowerShell のワイルドカードの表記法は、次のとおりです。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Asterisk (\*)matches zero or more occurrences of any character.</source>
          <target state="translated">アスタリスク (*) は、任意の文字の 0 個以上の出現と一致します。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Question mark (?) matches exactly one character.</source>
          <target state="translated">疑問符 (?) は、厳密に 1 つの文字と一致します。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Left bracket (\[) character and right bracket (]) character surround a set of characters to be matched.</source>
          <target state="translated">左角かっこ ([) 文字および右角かっこ (]) は、一致する文字のセットを囲みます。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Here are some examples of how wildcard specification works.</source>
          <target state="translated">ここでは、ワイルドカードを指定するとどのように機能するか、例を示します。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To find all files in the Windows directory with the suffix <bpt id="p1">**</bpt>.log<ept id="p1">**</ept> and exactly five characters in the base name, enter the following command:</source>
          <target state="translated">Windows ディレクトリでサフィックス <bpt id="p1">**</bpt>.log<ept id="p1">**</ept> が使用され、基本名が正確に 5 文字であるすべてのファイルを検索するには、次のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To find all files that begin with the letter <bpt id="p1">**</bpt>x<ept id="p1">**</ept> in the Windows directory, type:</source>
          <target state="translated">Windows ディレクトリで文字 <bpt id="p1">**</bpt>x<ept id="p1">**</ept> で始まるすべてのファイルを検索するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To find all files whose names begin with <bpt id="p1">**</bpt>x<ept id="p1">**</ept> or <bpt id="p2">**</bpt>z<ept id="p2">**</ept>, type:</source>
          <target state="translated">名前が <bpt id="p1">**</bpt>x<ept id="p1">**</ept> または <bpt id="p2">**</bpt>z<ept id="p2">**</ept> で始まるすべてのファイルを検索するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Excluding Items (-Exclude)</source>
          <target state="translated">項目の除外 (-Exclude)</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can exclude specific items by using the <bpt id="p1">**</bpt>Exclude<ept id="p1">**</ept> parameter of Get-ChildItem.</source>
          <target state="translated">Get-ChildItem の <bpt id="p1">**</bpt>Exclude<ept id="p1">**</ept> パラメーターを使用して、特定の項目を除外できます。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This lets you perform complex filtering in a single statement.</source>
          <target state="translated">これにより、単一のステートメントで複雑なフィルター処理を実行できます。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, suppose you are trying to find the Windows Time Service DLL in the System32 folder, and all you can remember about the DLL name is that it begins with "W" and has "32" in it.</source>
          <target state="translated">たとえば、System32 フォルダーで Windows タイム サービスの DLL を検索しようとしていて、DLL の名前について覚えているのは、"W" で始まり "32" が含まれている、ということだけだとします。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An expression like <bpt id="p1">**</bpt>w\&amp;#42;32\&amp;#42;.dll<ept id="p1">**</ept> will find all DLLs that satisfy the conditions, but it may also return the Windows 95 and 16-bit Windows compatibility DLLs that include "95" or "16" in their names.</source>
          <target state="translated">などの式 <bpt id="p1">**</bpt>w\ &amp;#42; 32\ &amp;#42;。dll<ept id="p1">**</ept> 条件を満たすすべての Dll を見つけられても、名前にも Windows 95 および Windows 互換性の 16 ビット Dll を含む「95」または「16」を返す、可能性があります。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can omit files that have any of these numbers in their names by using the <bpt id="p1">**</bpt>Exclude<ept id="p1">**</ept> parameter with the pattern <bpt id="p2">**</bpt>\&amp;#42;\[9516]\&amp;#42;<ept id="p2">**</ept>:</source>
          <target state="translated"><bpt id="p1">**</bpt>Exclude<ept id="p1">**</ept> パラメーターにパターン <bpt id="p2">**</bpt>&amp;#42;[9516]&amp;#42;<ept id="p2">**</ept> を指定して使用し、名前にこれらの数字があるファイルを省略できます。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>PS&gt; Get-ChildItem -Path C:\WINDOWS\System32\w<bpt id="p1">*</bpt>32<ept id="p1">*</ept>.dll -Exclude <bpt id="p2">*</bpt>[9516]<ept id="p2">*</ept> Directory: Microsoft.PowerShell.Core\FileSystem::C:\WINDOWS\System32 Mode                LastWriteTime     Length Name ----                -------------     ------ ---- -a---        2004-08-04   8:00 AM     174592 w32time.dll -a---        2004-08-04   8:00 AM      22016 w32topl.dll -a---        2004-08-04   8:00 AM     101888 win32spl.dll -a---        2004-08-04   8:00 AM     172032 wldap32.dll -a---        2004-08-04   8:00 AM     264192 wow32.dll -a---        2004-08-04   8:00 AM      82944 ws2_32.dll -a---        2004-08-04   8:00 AM      42496 wsnmp32.dll -a---        2004-08-04   8:00 AM      22528 wsock32.dll -a---        2004-08-04   8:00 AM      18432 wtsapi32.dll</source>
          <target state="translated">PS&gt; Get-ChildItem -Path C:\WINDOWS\System32\w<bpt id="p1">*</bpt>32<ept id="p1">*</ept>.dll -Exclude <bpt id="p2">*</bpt>[9516]<ept id="p2">*</ept> Directory: Microsoft.PowerShell.Core\FileSystem::C:\WINDOWS\System32 Mode                LastWriteTime     Length Name ----                -------------     ------ ---- -a---        2004-08-04   8:00 AM     174592 w32time.dll -a---        2004-08-04   8:00 AM      22016 w32topl.dll -a---        2004-08-04   8:00 AM     101888 win32spl.dll -a---        2004-08-04   8:00 AM     172032 wldap32.dll -a---        2004-08-04   8:00 AM     264192 wow32.dll -a---        2004-08-04   8:00 AM      82944 ws2_32.dll -a---        2004-08-04   8:00 AM      42496 wsnmp32.dll -a---        2004-08-04   8:00 AM      22528 wsock32.dll -a---        2004-08-04   8:00 AM      18432 wtsapi32.dll</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Mixing Get-ChildItem Parameters</source>
          <target state="translated">Get-ChildItem パラメーターの混在</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can use several of the parameters of the <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> cmdlet in the same command.</source>
          <target state="translated">同じコマンドの中で、<bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> コマンドレットのパラメーターを複数使用できます。</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Before you mix parameters, be sure that you understand wildcard matching.</source>
          <target state="translated">パラメーターを混在させる前に、ワイルドカードのマッチングを理解しておいてください。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, the following command returns no results:</source>
          <target state="translated">たとえば、次のコマンドは、結果を返しません。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>There are no results, even though there are two DLLs that begin with the letter "z" in the Windows folder.</source>
          <target state="translated">Windows フォルダーに文字 "z" で始まる DLL が 2 つ存在しても、結果を返しません。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>No results were returned because we specified the wildcard as part of the path.</source>
          <target state="translated">返される結果がないのは、パスの一部にワイルドカードを指定したためです。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Even though the command was recursive, the <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> cmdlet restricted the items to those that are in the Windows folder with names ending with ".dll".</source>
          <target state="translated">コマンドが再帰的でも、<bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> コマンドレットは、Windows フォルダー内にあり、名前が ".dll" で終わる項目に制限しています。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To specify a recursive search for files whose names match a special pattern, use the <bpt id="p1">**</bpt>-Include<ept id="p1">**</ept> parameter.</source>
          <target state="translated">名前が特殊なパターンに一致するファイルに対して再帰的な検索を指定するには、<bpt id="p1">**</bpt>-Include<ept id="p1">**</ept> パラメーターを使用します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>