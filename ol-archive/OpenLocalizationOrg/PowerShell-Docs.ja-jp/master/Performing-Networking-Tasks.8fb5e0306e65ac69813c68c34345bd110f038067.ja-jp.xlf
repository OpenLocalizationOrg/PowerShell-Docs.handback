<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39266e1e4ae2101de26277c20a98596f62cf223d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Performing-Networking-Tasks.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46e4caf7a973e82b180ba35d2915d533085716bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">844957a5d33e3fda119ced05b274617243b977d0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Performing Networking Tasks</source>
          <target state="translated">ネットワーク関連タスクの実行</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">PowerShell, コマンドレット</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Performing Networking Tasks</source>
          <target state="translated">ネットワーク関連タスクの実行</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Because TCP/IP is the most commonly used network protocol, most low-level network protocol administration tasks involve TCP/IP.</source>
          <target state="translated">TCP/IP は最も一般的に使用されるネットワーク プロトコルです。そのため、TCP/IP に関連したタスクは、最も低レベルのネットワーク プロトコル管理タスクと言えます。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In this section, we use Windows PowerShell and WMI to do these tasks.</source>
          <target state="translated">このセクションでは、Windows PowerShell および WMI を使用して、これらのタスクを実行します。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Listing IP Addresses for a Computer</source>
          <target state="translated">コンピューターの IP アドレスの一覧表示</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To get all IP addresses in use on the local computer, use the following command:</source>
          <target state="translated">ローカル コンピューターで使用されているすべての IP アドレスを取得するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The output of this command differs from most property lists, because values are enclosed in braces:</source>
          <target state="translated">このコマンドの出力結果を見ると、値が中かっこで囲まれており、他の多くのプロパティの一覧表示結果とは異なることがわかります。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>IPAddress</source>
          <target state="translated">IPAddress</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>{192.168.1.80} {192.168.148.1} {192.168.171.1} {0.0.0.0}</source>
          <target state="translated">{192.168.1.80} {192.168.148.1} {192.168.171.1} {0.0.0.0}</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To understand why the braces appear, use the Get-Member cmdlet to examine the <bpt id="p1">**</bpt>IPAddress<ept id="p1">**</ept> property:</source>
          <target state="translated">中かっこで囲まれている理由を理解するには、Get-Member コマンドレットを使用して <bpt id="p1">**</bpt>IPAddress<ept id="p1">**</ept> プロパティを調べます。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>PS&gt; Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=TRUE -ComputerName .</source>
          <target state="translated">PS&gt; Get-WmiObject -Class Win32_NetworkAdapterConfiguration -Filter IPEnabled=TRUE -ComputerName .</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>| Get-Member -Name IPAddress TypeName: System.Management.ManagementObject#root\cimv2\Win32_NetworkAdapter Configuration Name      MemberType Definition ----      ---------- ---------- IPAddress Property   System.String[] IPAddress {get;}</source>
          <target state="translated">| Get-Member -Name IPAddress TypeName: System.Management.ManagementObject#root\cimv2\Win32_NetworkAdapter Configuration Name      MemberType Definition ----      ---------- ---------- IPAddress Property   System.String[] IPAddress {get;}</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The IPAddress property for each network adapter is actually an array.</source>
          <target state="translated">各ネットワーク アダプターの IPAddress プロパティは、実際には配列です。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The braces in the definition indicate that <bpt id="p1">**</bpt>IPAddress<ept id="p1">**</ept> is not a <bpt id="p2">**</bpt>System.String<ept id="p2">**</ept> value, but an array of <bpt id="p3">**</bpt>System.String<ept id="p3">**</ept> values.</source>
          <target state="translated">Definition 列に示されている中かっこは、<bpt id="p1">**</bpt>IPAddress<ept id="p1">**</ept> が <bpt id="p2">**</bpt>System.String<ept id="p2">**</ept> 値ではなく、<bpt id="p3">**</bpt>System.String<ept id="p3">**</ept> 値の配列であることを示しています。</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Listing IP Configuration Data</source>
          <target state="translated">IP 構成データの一覧表示</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To display detailed IP configuration data for each network adapter, use the following command:</source>
          <target state="translated">各ネットワーク アダプターの詳しい IP 構成データを表示するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The default display for the network adapter configuration object is a very reduced set of the available information.</source>
          <target state="translated">ネットワーク アダプター構成オブジェクトに対して既定で表示される情報は、確認できる情報のごく一部のみです。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For in-depth inspection and troubleshooting, use Select-Object or a formatting cmdlet, such as Format-List, to specify the properties to be displayed.</source>
          <target state="translated">詳細な調査とトラブルシューティングを行う場合は、Select-Object または書式設定用コマンドレット (Format-List など) を使用して、表示するプロパティを指定します。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you are not interested in IPX or WINS properties—probably the case in a modern TCP/IP network—you can use the ExcludeProperty parameter of Select-Object to hide properties with names that begin with "WINS" or "IPX:"</source>
          <target state="translated">最新の TCP/IP ネットワークなどで、IPX や WINS のプロパティが不要な場合は、Select-Object の ExcludeProperty パラメーターを使用して、名前が "WINS" または "IPX" で始まるすべてのプロパティを非表示にすることもできます。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This command returns detailed information about DHCP, DNS, routing, and other minor IP configuration properties.</source>
          <target state="translated">このコマンドは、DHCP、DNS、ルーティングなど、IP に関連した従属的な構成プロパティについて詳しい情報を返します。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Pinging Computers</source>
          <target state="translated">コンピューターへの ping の送信</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can perform a simple ping against a computer using by <bpt id="p1">**</bpt>Win32_PingStatus<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Win32_PingStatus<ept id="p1">**</ept> を使用すると、コンピューターに対して簡単に ping を送信できます。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following command performs the ping, but returns lengthy output:</source>
          <target state="translated">次のコマンドは ping を実行しますが、長い出力が返されます。</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A more useful form for summary information a display of the Address, ResponseTime, and StatusCode properties, as generated by the following command.</source>
          <target state="translated">次のコマンドでは、概要を把握しやすくするため、Address、ResponseTime、StatusCode の各プロパティだけを表示しています。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The Autosize parameter of Format-Table resizes the table columns so that they display properly in Windows PowerShell.</source>
          <target state="translated">Format-Table の Autosize パラメーターを使用すると、Windows PowerShell で適切に表示されるように表の列のサイズが変更されます。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can use an array to ping multiple computers with a single command.</source>
          <target state="translated">配列を使用すると、1 つのコマンドで複数のコンピューターに ping を送信できます。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Because there is more than one address, use the <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> to ping each address separately:</source>
          <target state="translated">複数のアドレスが存在するため、<bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> を使用して、各アドレスに対して個別に ping を送信します。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can use the same command format to ping all of the computers on a subnet, such as a private network that uses network number 192.168.1.0 and a standard Class C subnet mask (255.255.255.0)., Only addresses in the range of 192.168.1.1 through 192.168.1.254 are legitimate local addresses (0 is always reserved for the network number and 255 is a subnet broadcast address).</source>
          <target state="translated">同じコマンド形式を使用して、サブネット上のすべてのコンピューターに ping を送信できます。たとえば、ネットワーク番号が 192.168.1.0 で、標準的なクラス C のサブネット マスク (255.255.255.0) を使用しているプライベート ネットワークを調べる場合、実際に調べる必要があるローカル アドレスは 192.168.1.1 ～ 192.168.1.254 の範囲のアドレスだけです (0 および 255 は、それぞれネットワーク番号およびサブネットのブロードキャスト アドレスとして常に予約されています)。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To represent an array of the numbers from 1 through 254 in Windows PowerShell, use the statement <bpt id="p1">**</bpt>1..254.<ept id="p1">**</ept></source>
          <target state="translated">Windows PowerShell で 1 ～ 254 の数値の配列を表現するには、<bpt id="p1">**</bpt>1..254<ept id="p1">**</ept> というステートメントを使用します。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A complete subnet ping can be performed by generating the array and then adding the values onto a partial address in the ping statement:</source>
          <target state="translated">まず、この配列を生成した後、それぞれの値を、ping ステートメントのアドレスの一部として使用すると、サブネット全体に対して ping を送信できます。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Note that this technique for generating a range of addresses can be used elsewhere as well.</source>
          <target state="translated">このテクニックは、一定範囲のアドレスを生成する場合だけでなく、さまざまな状況で応用できます。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can generate a complete set of addresses in this way:</source>
          <target state="translated">アドレスの完全なセットを生成するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Retrieving Network Adapter Properties</source>
          <target state="translated">ネットワーク アダプターのプロパティの取得</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Earlier in this user's guide, we mentioned that you could retrieve general configuration properties by using <bpt id="p1">**</bpt>Win32_NetworkAdapterConfiguration<ept id="p1">**</ept>.</source>
          <target state="translated">このユーザーズ ガイドの前半で、<bpt id="p1">**</bpt>Win32_NetworkAdapterConfiguration<ept id="p1">**</ept> を使用して一般的な構成プロパティを取得できることを説明しました。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Although not strictly TCP/IP information, network adapter information such as MAC addresses and adapter types can be useful for understanding what is going on with a computer.</source>
          <target state="translated">厳密には TCP/IP 情報とは言えませんが、MAC アドレスやアダプター タイプなどのネットワーク アダプター情報は、コンピューターでどのようなことが起こっているかを把握する上で有益な手段です。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To get a summary of this information, use the following command:</source>
          <target state="translated">この情報の要約を取得するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Assigning the DNS Domain for a Network Adapter</source>
          <target state="translated">ネットワーク アダプターの DNS ドメインの割り当て</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To assign the DNS domain for automatic name resolution, use the <bpt id="p1">**</bpt>Win32_NetworkAdapterConfiguration SetDNSDomain<ept id="p1">**</ept> method.</source>
          <target state="translated">自動名前解決のために DNS ドメインを割り当てるには、<bpt id="p1">**</bpt>Win32_NetworkAdapterConfiguration SetDNSDomain<ept id="p1">**</ept> メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Because you assign the DNS domain for each network adapter configuration independently, you need to use a <bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> statement to assign the domain to each adapter:</source>
          <target state="translated">DNS ドメインは、各ネットワーク アダプター構成に対して別々に割り当てることになります。したがって、<bpt id="p1">**</bpt>ForEach-Object<ept id="p1">**</ept> ステートメントを使用して、各アダプターにドメインを割り当てる必要があります。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The filtering statement "IPEnabled=true" is necessary, because even on a network that uses only TCP/IP, several of the network adapter configurations on a computer are not true TCP/IP adapters; they are general software elements supporting RAS, PPTP, QoS, and other services for all adapters and thus do not have an address of their own.</source>
          <target state="translated">ここでは、フィルター処理ステートメントとして、"IPEnabled=true" が必要です。その理由は、TCP/IP だけを使用したネットワークでも、コンピューター上のネットワーク アダプター構成のいくつかが、実際には TCP/IP アダプターではないためです。これらは、すべてのアダプターについて RAS、PPTP、QoS などのサービスをサポートする汎用的なソフトウェア要素であるため、自己のアドレスを持ちません。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can filter the command by using the <bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> cmdlet, instead of using the <bpt id="p2">**</bpt>Get-WmiObject<ept id="p2">**</ept> filter.</source>
          <target state="translated"><bpt id="p2">**</bpt>Get-WmiObject<ept id="p2">**</ept> フィルターを使う代わりに、<bpt id="p1">**</bpt>Where-Object<ept id="p1">**</ept> コマンドレットを使用して、コマンドをフィルター処理することもできます。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Performing DHCP Configuration Tasks</source>
          <target state="translated">DHCP の構成タスクの実行</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Modifying DHCP details involves working with a set of network adapters, just as the DNS configuration does.</source>
          <target state="translated">DNS の構成と同様、DHCP 情報の変更には、一連のネットワーク アダプターに対する操作が伴います。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>There are several distinct actions you can perform by using WMI, and we will step through a few of the common ones.</source>
          <target state="translated">WMI で実行できる操作はさまざまですが、ここでは、その中でも一般的なものをいくつか選んで説明します。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Determining DHCP-Enabled Adapters</source>
          <target state="translated">DHCP 対応アダプターの特定</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To find the DHCP-enabled adapters on a computer, use the following command:</source>
          <target state="translated">コンピューター上の DHCP 対応アダプターを検索するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To exclude adapters with IP configuration problems, you can retrieve only IP-enabled adapters:</source>
          <target state="translated">IP 構成の問題があるアダプターを除外するために、IP 対応アダプターだけを検索できます。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Retrieving DHCP Properties</source>
          <target state="translated">DHCP のプロパティの取得</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Because DHCP-related properties for an adapter generally begin with "DHCP," you can use the Property parameter of Format-Table to display only those properties:</source>
          <target state="translated">通常、アダプターの DHCP 関連のプロパティは先頭に "DHCP" が付くため、Format-Table の Property パラメーターを使用することで、それらのプロパティだけを表示できます。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Enabling DHCP on Each Adapter</source>
          <target state="translated">各アダプターの DHCP の有効化</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To enable DHCP on all adapters, use the following command:</source>
          <target state="translated">すべてのアダプターで DHCP を有効にするには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>Filter<ept id="p1">**</ept> statement "IPEnabled=true and DHCPEnabled=false" to avoid enabling DHCP where it is already enabled, but omitting this step will not cause errors.</source>
          <target state="translated">既に有効化されている DHCP を除外するために、<bpt id="p1">**</bpt>Filter<ept id="p1">**</ept> ステートメントとして "IPEnabled=true and DHCPEnabled=false" を使用できます。ただし、この手順を省略しても、エラーは発生しません。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Releasing and Renewing DHCP Leases on Specific Adapters</source>
          <target state="translated">特定のアダプターの DHCP リースの解放および更新</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Win32_NetworkAdapterConfiguration<ept id="p1">**</ept> class has <bpt id="p2">**</bpt>ReleaseDHCPLease<ept id="p2">**</ept> and <bpt id="p3">**</bpt>RenewDHCPLease<ept id="p3">**</ept> methods.</source>
          <target state="translated"><bpt id="p1">**</bpt>Win32_NetworkAdapterConfiguration<ept id="p1">**</ept> クラスには <bpt id="p2">**</bpt>ReleaseDHCPLease<ept id="p2">**</ept> メソッドと <bpt id="p3">**</bpt>RenewDHCPLease<ept id="p3">**</ept> メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Both are used in the same way.</source>
          <target state="translated">使用方法はどちらも同じです。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In general, use these methods if you only need to release or renew addresses for an adapter on a specific subnet.</source>
          <target state="translated">通常、これらのメソッドを使用するのは、特定のサブネット上に存在するアダプターのアドレスを解放または更新する必要がある場合だけです。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The easiest way to filter adapters on a subnet is to choose only the adapter configurations that use the gateway for that subnet.</source>
          <target state="translated">サブネット上のアダプターをフィルター処理する最も簡単な方法は、対応するサブネットのゲートウェイを使用したアダプター構成だけを選ぶことです。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, the following command releases all DHCP leases on adapters on the local computer that are obtaining DHCP leases from 192.168.1.254:</source>
          <target state="translated">たとえば、次のコマンドでは、DHCP リースを 192.168.1.254 から取得しているローカル コンピューターについて、アダプターの DHCP リースがすべて解放されます。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The only change for renewing a DHCP lease is to use the <bpt id="p1">**</bpt>RenewDHCPLease<ept id="p1">**</ept> method instead of the <bpt id="p2">**</bpt>ReleaseDHCPLease<ept id="p2">**</ept> method:</source>
          <target state="translated">DHCP リースを更新する場合は、<bpt id="p2">**</bpt>ReleaseDHCPLease<ept id="p2">**</ept> メソッドの代わりに <bpt id="p1">**</bpt>RenewDHCPLease<ept id="p1">**</ept> メソッドを使用するだけです。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When using these methods on a remote computer, be aware that you can lose access to the remote system if you are connected to it through the adapter with the released or renewed lease.</source>
          <target state="translated">これらのメソッドをリモート コンピューターに対して使用する場合は、接続に使用されているアダプターのリースが解放または更新されると、リモート システムへのアクセスが失われる可能性があることにご注意ください。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Releasing and Renewing DHCP Leases on All Adapters</source>
          <target state="translated">すべてのアダプターの DHCP リースの解放および更新</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You can perform global DHCP address releases or renewals on all adapters by using the <bpt id="p1">**</bpt>Win32_NetworkAdapterConfiguration<ept id="p1">**</ept> methods, <bpt id="p2">**</bpt>ReleaseDHCPLeaseAll<ept id="p2">**</ept> and <bpt id="p3">**</bpt>RenewDHCPLeaseAll<ept id="p3">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Win32_NetworkAdapterConfiguration<ept id="p1">**</ept> の <bpt id="p2">**</bpt>ReleaseDHCPLeaseAll<ept id="p2">**</ept> メソッドと <bpt id="p3">**</bpt>RenewDHCPLeaseAll<ept id="p3">**</ept> メソッドを使用すれば、すべてのアダプターを対象に DHCP アドレスをグローバルに解放または更新できます。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>However, the command must apply to the WMI class, rather than a particular adapter, because releasing and renewing leases globally is performed on the class, not on a specific adapter.</source>
          <target state="translated">ただし、リースの解放と更新をグローバルに実行する場合、実行の対象は、特定のアダプターではなく、WMI クラスになります。したがって、コマンドは特定のアダプターに適用するのではなく、WMI クラスに適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can get a reference to a WMI class, instead of class instances, by listing all WMI classes and then selecting only the desired class by name.</source>
          <target state="translated">すべての WMI クラスを一覧表示して、目的のクラスだけを名前で選べば、特定の WMI クラスの参照 (クラスのインスタンスではない) を取得できます。</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, the following command returns the Win32_NetworkAdapterConfiguration class:</source>
          <target state="translated">たとえば、Win32_NetworkAdapterConfiguration クラスを取得するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can treat the entire command as the class and then invoke the <bpt id="p1">**</bpt>ReleaseDHCPAdapterLease<ept id="p1">**</ept> method on it.</source>
          <target state="translated">コマンド全体をクラスとして扱い、その <bpt id="p1">**</bpt>ReleaseDHCPAdapterLease<ept id="p1">**</ept> メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the following command, the parentheses surrounding the <bpt id="p1">**</bpt>Get-WmiObject<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Where-Object<ept id="p2">**</ept> pipeline elements direct Windows PowerShell to evaluate them first:</source>
          <target state="translated">次のコマンドでは、パイプライン要素 <bpt id="p1">**</bpt>Get-WmiObject<ept id="p1">**</ept> および <bpt id="p2">**</bpt>Where-Object<ept id="p2">**</ept> を丸かっこで囲むことにより、それらが最初に評価されるようになります。</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use the same command format to invoke the <bpt id="p1">**</bpt>RenewDHCPLeaseAll<ept id="p1">**</ept> method:</source>
          <target state="translated"><bpt id="p1">**</bpt>RenewDHCPLeaseAll<ept id="p1">**</ept> メソッドも、同じコマンド形式で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Creating a Network Share</source>
          <target state="translated">ネットワーク共有の作成</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To create a network share, use the <bpt id="p1">**</bpt>Win32_Share Create<ept id="p1">**</ept> method:</source>
          <target state="translated">ネットワーク共有を作成するには、<bpt id="p1">**</bpt>Win32_Share Create<ept id="p1">**</ept> メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can also create the share by using <bpt id="p1">**</bpt>net share<ept id="p1">**</ept> in Windows PowerShell:</source>
          <target state="translated">Windows PowerShell で <bpt id="p1">**</bpt>net share<ept id="p1">**</ept> を使用して、共有を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Removing a Network Share</source>
          <target state="translated">ネットワーク共有の削除</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can remove a network share with <bpt id="p1">**</bpt>Win32_Share<ept id="p1">**</ept>, but the process is slightly different from creating a share, because you need to retrieve the specific share to be removed, rather than the <bpt id="p2">**</bpt>Win32_Share<ept id="p2">**</ept> class.</source>
          <target state="translated">ネットワーク共有を削除する場合も <bpt id="p1">**</bpt>Win32_Share<ept id="p1">**</ept> を使用できます。ただし、そのプロセスは共有を作成する場合と若干異なります。共有を作成する場合は、フィルターで <bpt id="p2">**</bpt>Win32_Share<ept id="p2">**</ept> クラスを取得していました。これに対し、共有を削除する場合は、削除対象となる特定の共有を取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following statement deletes the share "TempShare":</source>
          <target state="translated">次のステートメントでは、"TempShare" という共有を削除します。</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Net share<ept id="p1">**</ept> works as well:</source>
          <target state="translated"><bpt id="p1">**</bpt>net share<ept id="p1">**</ept> でも同じことを行うことができます。</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Connecting a Windows Accessible Network Drive</source>
          <target state="translated">Windows でアクセス可能なネットワーク ドライブの接続</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New-PSDrive<ept id="p1">**</ept> cmdlets creates a Windows PowerShell drive, but drives created this way are available only to Windows PowerShell.</source>
          <target state="translated"><bpt id="p1">**</bpt>New-PSDrive<ept id="p1">**</ept> コマンドレットを使用すると、Windows PowerShell ドライブを作成できます。しかし、この方法で作成されたドライブは、Windows PowerShell でしかアクセスできません。</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To create a new networked drive, you can use the <bpt id="p1">**</bpt>WScript.Network<ept id="p1">**</ept> COM object.</source>
          <target state="translated">新しいネットワーク ドライブを作成するには、<bpt id="p1">**</bpt>WScript.Network<ept id="p1">**</ept> という COM オブジェクトを使用します。</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following command maps the share \\\\FPS01\\users to local drive B:</source>
          <target state="translated">次のコマンドは、共有 \\FPS01\users をローカルの B ドライブにマッピングします。</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>net use<ept id="p1">**</ept> command works as well:</source>
          <target state="translated"><bpt id="p1">**</bpt>net use<ept id="p1">**</ept> コマンドでも同じことを行うことができます。</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Drives mapped with either <bpt id="p1">**</bpt>WScript.Network<ept id="p1">**</ept> or net use are immediately available to Windows PowerShell.</source>
          <target state="translated"><bpt id="p1">**</bpt>WScript.Network<ept id="p1">**</ept> または net use でマッピングされたドライブは、Windows PowerShell から直ちにアクセスできるようになります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>