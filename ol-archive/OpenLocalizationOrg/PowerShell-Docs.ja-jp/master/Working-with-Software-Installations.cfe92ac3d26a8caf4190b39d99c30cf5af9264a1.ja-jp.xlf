<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13fdac5369d70289d7a0b5115a04879f707e47fc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">scripting\getting-started\cookbooks\Working-with-Software-Installations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61867c6304f875f87e7fef6aaf5557d56eb96753</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfcfef8e4654d2d2146794995002ab93950ff53a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Working with Software Installations</source>
          <target state="translated">ソフトウェア インストールの操作</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet</source>
          <target state="translated">PowerShell, コマンドレット</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Working with Software Installations</source>
          <target state="translated">ソフトウェア インストールの操作</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Applications that are designed to use Windows Installer can be accessed through WMI's <bpt id="p1">**</bpt>Win32_Product<ept id="p1">**</ept> class, but not all applications in use today use the Windows Installer.</source>
          <target state="translated">Windows インストーラーを使用するように設計されているアプリケーションは、WMI の <bpt id="p1">**</bpt>Win32_Product<ept id="p1">**</ept> クラスからアクセスできますが、今日使用されているすべてのアプリケーションが Windows インストーラーを使用しているわけではありません。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Because the Windows Installer provides the widest range of standard techniques for working with installable applications, we will focus primarily on those applications.</source>
          <target state="translated">Windows インストーラーは、インストール可能なアプリケーションを操作するための標準的な手法を最も広範囲に提供しているため、主にこれらのアプリケーションについて説明します。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Applications that use alternate setup routines will generally not be managed by the Windows Installer.</source>
          <target state="translated">代替のセットアップ ルーチンを使用するアプリケーションは、通常 Windows インストーラーによって管理されません。</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Specific techniques for working with those applications will depend on the installer software and decisions made by the application developer.</source>
          <target state="translated">これらのアプリケーションを処理する具体的な方法は、インストーラーのソフトウェアとアプリケーションの開発者によってなされた決定によって異なります。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Applications that are installed by copying the application files to the computer usually cannot be managed by using techniques discussed here.</source>
          <target state="translated">コンピューターにアプリケーションのファイルをコピーすることによってインストールされているアプリケーションは、通常、ここで紹介されている手法を使用してで管理することはできません。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can manage these applications as files and folders by using the techniques discussed in the "Working With Files and Folders" section.</source>
          <target state="translated">これらのアプリケーションは、「ファイルとフォルダーの操作」セクションで説明した手法を使用することで、ファイルやフォルダーとして管理できます。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Listing Windows Installer Applications</source>
          <target state="translated">Windows インストーラー アプリケーションを一覧表示する</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To list the applications installed with the Windows Installer on a local or remote system, use the following simple WMI query:</source>
          <target state="translated">ローカルまたはリモート システムに Windows インストーラーを使用してインストールされているアプリケーションの一覧を表示するには、次の単純な WMI クエリを使用します。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To display all of the properties of the Win32_Product object to the display, use the Properties parameter of the formatting cmdlets, such as the Format-List cmdlet, with a value of \* (all).</source>
          <target state="translated">表示するには、すべての Win32_Product オブジェクトのプロパティを表示の値を持つ Format-list コマンドレットなどの書式設定コマンドレットのプロパティのパラメーターを使用します。 \ * (すべて)。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Or, you could use the <bpt id="p1">**</bpt>Get-WmiObject Filter<ept id="p1">**</ept> parameter to select only Microsoft .NET Framework 2.0.</source>
          <target state="translated">または、<bpt id="p1">**</bpt>Get-WmiObject Filter<ept id="p1">**</ept> パラメーターを使用して、Microsoft .NET Framework 2.0 のみを選択できます。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Because the filter used in this command is a WMI filter, it uses WMI Query Language (WQL) syntax, not Windows PowerShell syntax.</source>
          <target state="translated">このコマンドで使用されているフィルターは WMI フィルターであるため、Windows PowerShell の構文ではなく、WMI クエリ言語 (WQL) 構文を使用します。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Instead,:</source>
          <target state="translated">代わりに、</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Note that WQL queries frequently use characters, such as spaces or equal signs, that have a special meaning in Windows PowerShell.</source>
          <target state="translated">WQL クエリは、スペースや等号など、Windows PowerShell で特別な意味を持つ文字を頻繁に使用することに注意してください。</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For this reason, it is prudent to always enclose the value of the Filter parameter in quotation marks.</source>
          <target state="translated">このため、フィルターのパラメーターの値は、常に引用符で囲むのが安全です。</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also use the Windows PowerShell escape character, a backtick (\`), although it may not improve readability.</source>
          <target state="translated">また、読みやすさは向上しませんが、Windows PowerShell のエスケープ文字であるバックティック (`) を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following command is equivalent to the previous command and returns the same results, but uses the backtick to escape special characters, instead of quoting the entire filter string.</source>
          <target state="translated">次のコマンドは前のコマンドと同等で、同様の結果を返しますが、フィルター文字列全体を引用符で囲むのではなく、バックティックを使用して説くス文字をエスケープします。</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To list only the properties that interest you, use the Property parameter of the formatting cmdlets to list the desired properties.</source>
          <target state="translated">関心のあるプロパティのみの一覧を表示するには、書式設定コマンドレットの Property パラメーターを使用して、必要なプロパティの一覧を表示します。</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Finally, to find only the names of installed applications, a simple <bpt id="p1">**</bpt>Format-Wide<ept id="p1">**</ept> statement simplifies the output:</source>
          <target state="translated">最後に、インストールされたアプリケーションの名前のみを検索するには、単純な <bpt id="p1">**</bpt>Format-Wide<ept id="p1">**</ept> ステートメントにより、出力が簡略化されます。</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Although we now have several ways to look at applications that used the Windows Installer for installation, we have not considered other applications.</source>
          <target state="translated">これまでインストールに Windows インストーラーを使用したアプリケーションを検索する方法をいくつか確認しましたが、他のアプリケーションはまだ検討していません。</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because most standard applications register their uninstaller with Windows, we can work with those locally by finding them in the Windows registry.</source>
          <target state="translated">ほとんどの標準的なアプリケーションはアンインストーラーを Windows に登録するため、Windows レジストリでこれらを検索することで、ローカルで操作できます。</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Listing All Uninstallable Applications</source>
          <target state="translated">アンインストール可能なすべてのアプリケーションを一覧表示する</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Although there is no guaranteed way to find every application on a system, it is possible to find all programs with listings displayed in the Add or Remove Programs dialog box.</source>
          <target state="translated">システム上のすべてのアプリケーションを検索する確実な方法はありませんが、[プログラム追加と削除] ダイアログ ボックスに表示される一覧ですべてのプログラムを検索することができます。</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Add or Remove Programs finds these applications in the following registry key:</source>
          <target state="translated">[プログラム追加と削除] は、次のレジストリ キーでこれらのアプリケーションを検索します。</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall<ept id="p1">**</ept>します。</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>We can also examine this key to find applications.</source>
          <target state="translated">また、このキーを確認してアプリケーションを検索することもできます。</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To make it easier to view the Uninstall key, we can map a Windows PowerShell drive to this registry location:</source>
          <target state="translated">Uninstall キーを簡単に表示できるように、このレジストリの場所に Windows PowerShell ドライブをマップできます。</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>HKLM:<ept id="p1">**</ept> drive is mapped to the root of <bpt id="p2">**</bpt>HKEY_LOCAL_MACHINE<ept id="p2">**</ept>, so we used that drive in the path to the Uninstall key.</source>
          <target state="translated"><bpt id="p1">**</bpt>HKLM:<ept id="p1">**</ept> ドライブは、<bpt id="p2">**</bpt>HKEY_LOCAL_MACHINE<ept id="p2">**</ept> のルートにマップされているので、このドライブを Uninstall キーのパスに使用しました。</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Instead of <bpt id="p1">**</bpt>HKLM:<ept id="p1">**</ept> we could have specified the registry path by using either <bpt id="p2">**</bpt>HKLM<ept id="p2">**</ept> or <bpt id="p3">**</bpt>HKEY_LOCAL_MACHINE<ept id="p3">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>HKLM:<ept id="p1">**</ept> の代わりに、<bpt id="p2">**</bpt>HKLM<ept id="p2">**</ept> または <bpt id="p3">**</bpt>HKEY_LOCAL_MACHINE<ept id="p3">**</ept> のいずれかを使用して、レジストリのパスを指定できます。</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The advantage of using an existing registry drive is that we can use tab-completion to fill in the keys names, so we do not need to type them.</source>
          <target state="translated">既存のレジストリ ドライブを使用する利点は、タブ補完を利用してキーの名前を入力できるため、ユーザーが入力する必要がないことです。</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>We now have a drive named "Uninstall" that can be used to quickly and conveniently look for application installations.</source>
          <target state="translated">これで、"Uninstall" という名前のドライブができ、これを利用することでアプリケーションのインストールの検索が迅速かつ便利になります。</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>We can find the number of installed applications by counting the number of registry keys in the Uninstall: Windows PowerShell drive:</source>
          <target state="translated">Uninstall: Windows PowerShell ドライブで、レジストリ キーの数をカウントすることによって、インストールされているアプリケーションの数がわかります。</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>We can search this list of applications further by using a variety of techniques, beginning with <bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Get-ChildItem<ept id="p1">**</ept> をはじめとするさまざまな方法を利用して、アプリケーションの一覧を詳細に検索できます。</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To get a list of applications and save them in the <bpt id="p1">**</bpt>$UninstallableApplications<ept id="p1">**</ept> variable, use the following command:</source>
          <target state="translated">アプリケーションの一覧を取得して、<bpt id="p1">**</bpt>$UninstallableApplications<ept id="p1">**</ept> 変数に保存するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>We are using a lengthy variable name here for clarity.</source>
          <target state="translated">ここでは、わかりやすくするために長い変数名を使用しています。</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In actual use, there is no reason to use long names.</source>
          <target state="translated">実際に使用するときは、長い名前を使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Although you can use tab-completion for variable names, you can also use 1–2 character names for speed.</source>
          <target state="translated">変数名にタブ補完を使用できますが、1 ～ 2 文字の名前を使用すると時間を短縮できます。</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Longer, descriptive names are most useful when you are developing code for reuse.</source>
          <target state="translated">長くわかりやすい名前は、再利用するためのコードを開発する際に役立ちます。</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To display the values of the registry entries in the registry keys under Uninstall, use the GetValue method of the registry keys.</source>
          <target state="translated">Uninstall の下のレジストリ キーにレジストリ エントリの値を表示するには、レジストリ キーの GetValue メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The value of the method is the name of the registry entry.</source>
          <target state="translated">メソッドの値は、レジストリ エントリの名前です。</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, to find the display names of applications in the Uninstall key, use the following command:</source>
          <target state="translated">たとえば、Uninstall キーの下でアプリケーションの表示名を検索するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>There is no guarantee that these values are unique.</source>
          <target state="translated">これらの値が一意である保証はありません。</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the following example, two installed items appear as "Windows Media Encoder 9 Series":</source>
          <target state="translated">次の例では、インストールされている 2 つの項目が "Windows Media エンコーダー 9 シリーズ" として表示されます。</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Installing Applications</source>
          <target state="translated">アプリケーションのインストール</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">**</bpt>Win32_Product<ept id="p1">**</ept> class to install Windows Installer packages, remotely or locally.</source>
          <target state="translated"><bpt id="p1">**</bpt>Win32_Product<ept id="p1">**</ept> クラスを使用して、リモートまたはローカルで、Windows インストーラー パッケージをインストールできます。</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>On Windows Vista, Windows Server 2008, and later versions of Windows, to install an application, you must start Windows PowerShell with the "Run as administrator" option.</source>
          <target state="translated">Windows Vista、Windows Server 2008、およびそれ以降のバージョンの Windows では、アプリケーションをインストールするには、[管理者として実行] オプションを使用して Windows PowerShell を起動する必要があります。</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When installing remotely, use a Universal Naming Convention (UNC) network path to specify the path to the .msi package, because the WMI subsystem does not understand Windows PowerShell paths.</source>
          <target state="translated">リモートでインストールする場合は、WMI のサブシステムが Windows PowerShell のパスを認識しないため、.msi パッケージへのパスを指定するのに、汎用名前付け規則 (UNC) のネットワーク パスを使用します。</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, to install the NewPackage.msi package located in the network share \\\\AppServ\\dsp on the remote computer PC01, type the following command at the Windows PowerShell prompt:</source>
          <target state="translated">たとえば、リモート コンピューター PC01 のネットワーク共有 \\AppServ\dsp にある NewPackage.msi パッケージをインストールするには、Windows PowerShell プロンプトで次のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Applications that do not use Windows Installer technology may have application-specific methods available for automated deployment.</source>
          <target state="translated">Windows インストーラー テクノロジを使用しないアプリケーションは、展開の自動化に利用できるアプリケーション固有の方法があります。</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To determine whether there is a method for deployment automation, check the documentation for the application or consult the application vendor's support system.</source>
          <target state="translated">展開を自動化するための方法があるかどうかを確認するには、アプリケーションのマニュアルを参照するか、アプリケーション ベンダーのサポート システムを参照してください。</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In some cases, even if the application vendor did not specifically design the application for installation automation, the installer software manufacturer may have some techniques for automation.</source>
          <target state="translated">場合によっては、アプリケーション ベンダーが特にインストールの自動化に対応するようアプリケーションを設計していなくても、インストーラー ソフトウェアの製造元が自動化のためのテクニックをいくつか持っていることがあります。</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Removing Applications</source>
          <target state="translated">アプリケーションの削除</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Removing a Windows Installer package by using Windows PowerShell works in approximately the same way as installing a package.</source>
          <target state="translated">Windows PowerShell を使用した Windows インストーラー パッケージの削除は、パッケージのインストールとほとんど同じ方法で機能します。</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Here is an example that selects the package to uninstall based on its name; in some cases it may be easier to filter with the <bpt id="p1">**</bpt>IdentifyingNumber<ept id="p1">**</ept>:</source>
          <target state="translated">名前に基づいてアンインストールするパッケージを選択する例を以下に示します。場合によっては、<bpt id="p1">**</bpt>IdentifyingNumber<ept id="p1">**</ept> を使用してフィルター処理した方が簡単になることがあります。</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Removing other applications is not quite so simple, even when done locally.</source>
          <target state="translated">他のアプリケーションの削除は、ローカルで実行する場合でも、それほど単純ではありません。</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>We can find the command line uninstallation strings for these applications by extracting the <bpt id="p1">**</bpt>UninstallString<ept id="p1">**</ept> property.</source>
          <target state="translated"><bpt id="p1">**</bpt>UninstallString<ept id="p1">**</ept> プロパティを抽出することで、これらのアプリケーションに対するコマンド ラインのアンインストール文字列を検索できます。</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method works for Windows Installer applications and for older programs appearing under the Uninstall key:</source>
          <target state="translated">このメソッドは、Windows インストーラー アプリケーションや Uninstall キーの下に表示される古いプログラムに対して機能します。</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can filter the output by the display name, if you like:</source>
          <target state="translated">必要であれば、出力を表示名でフィルター処理できます。</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>However, these strings may not be directly usable from the Windows PowerShell prompt without some modification.</source>
          <target state="translated">ただし、これらの文字列は、Windows PowerShell プロンプトから直接使用するには、いくつか変更が必要な場合があります。</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Upgrading Windows Installer Applications</source>
          <target state="translated">Windows インストーラー アプリケーションのアップグレード</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To upgrade an application, you need to know the name of the application and the path to the application upgrade package.</source>
          <target state="translated">アプリケーションをアップグレードするには、アプリケーションの名前、およびアプリケーションのアップグレード パッケージのパスを認識している必要があります。</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>With that information, you can upgrade an application with a single Windows PowerShell command:</source>
          <target state="translated">その情報があれば、1 つの Windows PowerShell コマンドを使用してアプリケーションをアップグレードすることができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>