<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-1c394fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b2dfd9c39fe5d7bf4a52032653108729715e6bf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">jea\common-role-capability-pitfalls.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">255cd0a7e474eb4e2d095f980c549cf26bc248ae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12b3f0375942dd9d33017daf109f6705b66040c7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>powershell,cmdlet,jea</source>
          <target state="translated">PowerShell, コマンドレット, JEA</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>common role capability pitfalls</source>
          <target state="translated">ロール機能のよくある落とし穴</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Common Role Capability Pitfalls</source>
          <target state="translated">ロール機能のよくある落とし穴</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You may run into a few common pitfalls if you go through this process yourself.</source>
          <target state="translated">本手順の実行時に陥りやすいいくつかの落とし穴について説明します。</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Here is a quick guide explaining how to identify and remediate these issues when modifying or creating a new endpoint:</source>
          <target state="translated">エンドポイントの変更時、また新規作成時にこれらの問題を特定し、対処する方法の概要を以下に紹介します。</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Functions vs. Cmdlets</source>
          <target state="translated">関数とコマンドレット</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>PowerShell commands written in PowerShell are PowerShell functions.</source>
          <target state="translated">PowerShell で記述された PowerShell コマンドを PowerShell 関数と呼びます。</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>PowerShell commands written as specialized .NET classes are PowerShell cmdlets.</source>
          <target state="translated">特定の .NET クラスとして記述された PowerShell コマンドは、PowerShell コマンドレットです。</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can check the command type by running <ph id="ph1">`Get-Command`</ph>.</source>
          <target state="translated">コマンドの種類を確認するには、<ph id="ph1">`Get-Command`</ph> を実行します。</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>VisibleProviders</source>
          <target state="translated">VisibleProviders</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You will need to expose any providers your commands need.</source>
          <target state="translated">コマンドに必要なすべてのプロバイダーを公開する必要があります。</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The most common is the FileSystem provider, but you may also need to expose others, like the Registry provider.</source>
          <target state="translated">最も一般的なプロバイダーとして FileSystem プロバイダーがありますが、他に Registry プロバイダーなどの公開が必要な場合もあります。</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For an introduction to providers, check out this <bpt id="p1">[</bpt>Hey, Scripting Guy blog post<ept id="p1">](http://blogs.technet.com/b/heyscriptingguy/archive/2015/04/20/find-and-use-windows-powershell-providers.aspx)</ept>.</source>
          <target state="translated">プロバイダーの概要については、<bpt id="p1">[</bpt>Hey, Scripting Guy のブログ投稿<ept id="p1">](http://blogs.technet.com/b/heyscriptingguy/archive/2015/04/20/find-and-use-windows-powershell-providers.aspx)</ept>をご覧ください。</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Be careful when exposing providers -- often, it is better to define your own function that works with the underlying providers than to directly expose the provider in a JEA session.</source>
          <target state="translated">プロバイダーの公開時の注意事項: JEA セッションで直接プロバイダーを公開するより、基盤となるプロバイダーを操作する独自の関数を定義するほうが適している場合もあります。</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This way, you can still allow users to work with files, registry keys, etc. but retain control over <bpt id="p1">**</bpt>which<ept id="p1">**</ept> files and registry keys they can work with using custom validation logic.</source>
          <target state="translated">この方法でも、ファイル、レジストリ キーなどを操作する権限や、カスタムの検証ロジックを使用して<bpt id="p1">**</bpt>どの<ept id="p1">**</ept>ファイルやレジストリ キーを管理するか、それらに対するコントロールをユーザーに付与できます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>